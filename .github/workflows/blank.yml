// script.cpp
// Compile: g++ -std=c++17 -o script script.cpp
// Run: ./script
// Make sure your terminal supports UTF-8 and the source file is saved in UTF-8.
#include <iostream>
#include <string>
void printHeader(const std::string &title) {
    std::cout << "========================================\n";
    std::cout << title << "\n";
    std::cout << "========================================\n\n";
}
void printIntro() {
    printHeader(u8"🔹 Intro (Splash / Promo)");
    std::cout << u8"سلام! ڀليڪار آهي AI Sindhi Video App ۾.\n";
    std::cout << u8"هي جديد ايپ توهان لاءِ آهي، جتي توهان سنڌي ۾ ڳالهايو يا لکو، ۽ ايپ توهان لاءِ وڊيو ٺاهي ڏيکاريندي.\n\n";
}
void printHomeScreen() {
    printHeader(u8"🔹 Home Screen");
    std::cout << u8"هتي توهان وٽ ٻه اهم آپشن آهن:\n";
    std::cout << u8"🎙️ پنهنجو آواز رڪارڊ ڪريو،\n";
    std::cout << u8"يا 📝 سنڌي ۾ لکو.\n";
    std::cout << u8"۽ اسان جو AI ان کي وڊيو ۾ تبديل ڪندو.\n\n";
}
void printEducationMode() {
    printHeader(u8"🔹 Education Mode");
    std::cout << u8"شاگردن لاءِ اسان وٽ Education Mode آهي.\n";
    std::cout << u8"هتي سبق، سوال جواب ۽ پڙهائيءَ جو مواد وڊيو جي صورت ۾ موجود آهي.\n\n";
}
void printPoetryStories() {
    printHeader(u8"🔹 Poetry & Stories Mode");
    std::cout << u8"جيڪڏهن توهان شاعري، ڪهاڻيون يا ثقافتي مواد وڊيو ۾ ڏسڻ چاهيو ٿا،\n";
    std::cout << u8"ته Poetry & Stories Mode استعمال ڪريو.\n\n";
}
void printPreviewShare() {
    printHeader(u8"🔹 Video Preview & Share");
    std::cout << u8"وڊيو ٺهڻ کان پوءِ، توهان ان کي ڏسي سگهو ٿا، محفوظ ڪري سگهو ٿا، ۽ دوستن سان شيئر به ڪري سگهو ٿا – WhatsApp، Facebook يا YouTube تي.\n\n";
}
void printOutro() {
    printHeader(u8"🔹 Outro");
    std::cout << u8"AI Sindhi Video App –\n";
    std::cout << u8"توهان جي ٻولي، توهان جو مستقبل.\n";
    std::cout << u8"هاڻي سنڌيءَ ۾ سکڻ، پڙهڻ ۽ وڊيو ٺاهڻ بلڪل آسان!\n\n";
}
int main() {
    // Ensure locale/terminal supports UTF-8 for correct Sindhi display.
    // On many systems this is fine if terminal encoding is UTF-8.
    printIntro();
    printHomeScreen();
    printEducationMode();
    printPoetryStories();
    printPreviewShare();
    printOutro();
    return 0;
}# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
